import{_ as c,c as a,a0 as o,o as t}from"./chunks/framework.BZW3-RJc.js";const u=JSON.parse('{"title":"React源码结构","description":"","frontmatter":{},"headers":[],"relativePath":"1-前置知识&原理初探/1-React项目结构.md","filePath":"1-前置知识&原理初探/1-React项目结构.md"}'),d={name:"1-前置知识&原理初探/1-React项目结构.md"};function l(r,e,i,n,s,h){return t(),a("div",null,e[0]||(e[0]=[o('<h1 id="react源码结构" tabindex="-1">React源码结构 <a class="header-anchor" href="#react源码结构" aria-label="Permalink to &quot;React源码结构&quot;">​</a></h1><ul><li><code>react</code>: 包含React的核心模块代码，比如<code>React.createElement</code>、<code>React.Component</code>、<code>React.Children</code></li><li><code>react-reconciler</code>: diff算法，协调器的实现</li><li><code>scheduler</code>: 调度器</li><li><code>react-dom</code>: 宿主环境相关的包</li><li><code>shared</code>: 公共辅助方法，与宿主环境无关</li></ul><h2 id="流程概述" tabindex="-1">流程概述 <a class="header-anchor" href="#流程概述" aria-label="Permalink to &quot;流程概述&quot;">​</a></h2><ol><li>发生内容更新</li><li><code>Scheduler</code>: 进行调度，执行<code>Reconciler</code>任务</li><li><code>Reconciler</code>: 进行diff比较，计算出更新的内容，然后交给<code>Scheduler</code>-&gt;找时机进行<code>Render</code>的调度</li><li><code>Render</code>: 进行DOM的更新渲染</li></ol><h2 id="react" tabindex="-1">react <a class="header-anchor" href="#react" aria-label="Permalink to &quot;react&quot;">​</a></h2><ol><li><code>jsx格式</code>转换为<code>React.createElment()/jsx方法/jsxDev方法</code></li></ol>',6)]))}const R=c(d,[["render",l]]);export{u as __pageData,R as default};
