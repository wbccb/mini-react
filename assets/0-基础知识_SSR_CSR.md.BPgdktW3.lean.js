import{_ as e,c as l,a0 as r,o}from"./chunks/framework.BZW3-RJc.js";const S=JSON.parse('{"title":"SSR","description":"","frontmatter":{},"headers":[],"relativePath":"0-基础知识/SSR&CSR.md","filePath":"0-基础知识/SSR&CSR.md"}'),i={name:"0-基础知识/SSR&CSR.md"};function t(n,a,h,d,s,c){return o(),l("div",null,a[0]||(a[0]=[r('<h1 id="ssr" tabindex="-1">SSR <a class="header-anchor" href="#ssr" aria-label="Permalink to &quot;SSR&quot;">​</a></h1><blockquote><p>服务端渲染</p></blockquote><h2 id="基本原理" tabindex="-1">基本原理 <a class="header-anchor" href="#基本原理" aria-label="Permalink to &quot;基本原理&quot;">​</a></h2><ol><li>返回的就是一个最终的HTML网页</li></ol><h2 id="优点" tabindex="-1">优点 <a class="header-anchor" href="#优点" aria-label="Permalink to &quot;优点&quot;">​</a></h2><ol><li>性能好</li><li>易于SEO搜索</li></ol><h2 id="缺点" tabindex="-1">缺点 <a class="header-anchor" href="#缺点" aria-label="Permalink to &quot;缺点&quot;">​</a></h2><ol><li>开发成本高</li></ol><h2 id="应用环境" tabindex="-1">应用环境 <a class="header-anchor" href="#应用环境" aria-label="Permalink to &quot;应用环境&quot;">​</a></h2><ol><li>对性能要求高的系统，如弱网环境、移动端</li><li>操作交互较简单的系统</li><li>B端（不需要SEO优化）不太适合用SSR</li></ol><h2 id="常见框架" tabindex="-1">常见框架 <a class="header-anchor" href="#常见框架" aria-label="Permalink to &quot;常见框架&quot;">​</a></h2><ol><li>Next.js: React</li><li>Nuxt.js: Vue</li><li>Nest.js: 纯后端框架</li></ol><h2 id="next-js" tabindex="-1">Next.js <a class="header-anchor" href="#next-js" aria-label="Permalink to &quot;Next.js&quot;">​</a></h2><h3 id="pre-render" tabindex="-1">pre-render <a class="header-anchor" href="#pre-render" aria-label="Permalink to &quot;pre-render&quot;">​</a></h3><ol><li><code>Static Generation</code>: 直接生成完整的HTML文件</li><li><code>Server-side rendering</code>: 每次请求时动态生成HTML文件（一般是需要到数据库中获取数据进行整合到HTML）</li></ol><h1 id="csr" tabindex="-1">CSR <a class="header-anchor" href="#csr" aria-label="Permalink to &quot;CSR&quot;">​</a></h1><blockquote><p>客户端渲染</p></blockquote><h2 id="基本原理-1" tabindex="-1">基本原理 <a class="header-anchor" href="#基本原理-1" aria-label="Permalink to &quot;基本原理&quot;">​</a></h2><ol><li>服务端返回HTML文件</li><li>客户端获取对应的CSS文件+JS文件+JSON数据，最终使用JS渲染出来最终的HTML网页</li></ol><h2 id="缺点-1" tabindex="-1">缺点 <a class="header-anchor" href="#缺点-1" aria-label="Permalink to &quot;缺点&quot;">​</a></h2><ol><li>需要多次网络请求，渲染速度慢</li></ol>',21)]))}const b=e(i,[["render",t]]);export{S as __pageData,b as default};
